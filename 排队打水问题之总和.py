"""
时间限制：1.0s 内存限制：256.0MB

问题描述
　　有n个人排队到r个水龙头去打水，他们装满水桶的时间t1、t2…………tn为整数且各不相等，应如何安排他们的打水顺序才能使他们总共花费的时间最少？
　　
输入格式
　　第一行n，r (n<=500,r<=75)
　　第二行为n个人打水所用的时间Ti (Ti<=100)；
　　
输出格式
　　最少的花费时间
　　
样例输入
3 2
1 2 3

样例输出
7

数据规模和约定
　　其中80%的数据保证n<=10

3 2
1 2 3
3
1 2
"""

n,r=map(int,input().split())
time_list=list(map(int,input().split()))
water=[0]*r
last=0
for i in range(n):
    """
    接水花费的时间加到水龙头上进行统计时间，每次对水龙头进行排序，就不用对n个人进行排序
    换个视角，最先有空出来水龙头肯定是接的最快的，
    后面的人就去这个水龙头节水
    """
    water.sort()
    water[0]+=time_list[i]
    last+=water[0]
print(last)